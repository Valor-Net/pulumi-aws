name: Trigger ECS Deployment

on:
  workflow_dispatch:
    inputs:
      image_tag:
        description: 'Image tag to deploy'
        required: true
      service_name:
        description: 'Service name'
        required: true
      stack:
        description: 'Stack name'
        required: true
      commit_sha:
        description: 'Commit SHA'
        required: true
      ecr_repository:
        description: 'ECR Repository'
        required: true
      ecr_nginx_repository:
        description: 'ECR Nginx Repository'
        required: false
      ecs_cluster:
        description: 'ECS Cluster'
        required: true

# SEM concurrency - aceita todos os dispatches
jobs:
  enqueue-deployment:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.INFRA_REPO_TOKEN }}
        fetch-depth: 0
    
    - name: Add to deployment queue
      run: |
        git config user.email "ci@valornet.com"
        git config user.name "CI/CD Bot"
        
        # Criar diretório de fila se não existe
        mkdir -p .github/deployment-queue
        
        # Criar arquivo de deployment request
        TIMESTAMP=$(date +%s)
        REQUEST_FILE=".github/deployment-queue/${TIMESTAMP}-${{ github.run_id }}.json"
        
        cat > "$REQUEST_FILE" << EOF
        {
          "image_tag": "${{ github.event.inputs.image_tag }}",
          "service_name": "${{ github.event.inputs.service_name }}",
          "stack": "${{ github.event.inputs.stack }}",
          "commit_sha": "${{ github.event.inputs.commit_sha }}",
          "ecr_repository": "${{ github.event.inputs.ecr_repository }}",
          "ecs_cluster": "${{ github.event.inputs.ecs_cluster }}",
          "requested_at": "$(date -u +"%Y-%m-%d %H:%M:%S UTC")",
          "run_id": "${{ github.run_id }}"
        }
        EOF
        
        # Commit com retry
        for i in {1..5}; do
          git pull --rebase origin main
          git add "$REQUEST_FILE"
          git commit -m "📥 Queue deployment: ${{ github.event.inputs.service_name }} (${{ github.event.inputs.image_tag }})"
          
          if git push origin main; then
            echo "✅ Deployment enfileirado com sucesso!"
            echo "📋 Request file: $REQUEST_FILE"
            exit 0
          fi
          
          echo "⚠️ Retry $(($i))/5..."
          sleep 2
        done
        
        echo "❌ Falha ao enfileirar deployment"
        exit 1
    
    - name: Trigger processor
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.INFRA_REPO_TOKEN }}
        script: |
          await github.rest.actions.createWorkflowDispatch({
            owner: context.repo.owner,
            repo: context.repo.repo,
            workflow_id: 'deploy-ecs-services.yml',
            ref: 'main'
          });
          console.log('✅ Processor workflow triggered');